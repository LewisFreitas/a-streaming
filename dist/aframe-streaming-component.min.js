!function(e){"function"==typeof define&&define.amd?define(e):e()}(function(){"use strict";if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("streaming",{schema:{fps:{default:60},dumpTimeFrequency:{default:500},mimeType:{default:"video/webm;codecs=h264"},videoBitsPerSecond:{default:15e6},service:{default:"local"},server_url:{default:"ws://localhost:3000"},stream_url:{default:"rtmp://localhost/live/STREAM_DEV"}},init:function(){const e=this.el;this.connect=this.connect.bind(this),e.addEventListener("startstreaming",()=>{this.connect(this.data.service)})},update:function(){},connect:function(e){switch(e){case"fb":case"youtube":case"local":default:this.stream()}},stream:function(){const e=this.el;this.data.server_url.match(/^((ws):\/\/([a-zA-Z]+)|(ws):\/\/([a-zA-Z]+):([0-9]+))$$/)&&this.data.stream_url.match(/^(([a-zA-Z]+):\/\/([a-zA-Z]+):([0-9]+)\/([[:ascii:]]+)|([a-zA-Z]+):\/\/([a-zA-Z]+)\/([[:ascii:]]+))$/)&&console.table(this);const t=`${this.data.server_url}/rtmp/${this.data.service}/${encodeURIComponent(this.data.stream_url)}`;console.log(t),this.ws=new WebSocket(t),this.ws.addEventListener("open",t=>{this.stream=e.sceneEl.canvas.captureStream(this.data.fps),this.recorder=new MediaRecorder(this.stream,{mimeType:this.data.mimeType,videoBitsPerSecond:this.data.videoBitsPerSecond}),this.recorder.ondataavailable=(e=>{this.ws.send(e.data)}),this.recorder.onstop=(e=>this.ws.close.bind(this.ws)),this.recorder.start(this.data.dumpTimeFrequency)}),this.ws.addEventListener("close",e=>{this.recorder.stop()})}})});